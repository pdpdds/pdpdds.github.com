;=================================================;
;   ____                    _____   ____     2012 ;
;  /\  _`\                 /\  __`\/\  _`\        ;
;  \ \ \/\ \     __   __  _\ \ \/\ \ \,\L\_\      ;
;   \ \ \ \ \  /'__`\/\ \/'\\ \ \ \ \/_\__ \      ;
;    \ \ \_\ \/\  __/\/>  </ \ \ \_\ \/\ \L\ \    ;
;     \ \____/\ \____\/\_/\_\ \ \_____\ `\____\   ;
;      \/___/  \/____/\//\/_/  \/_____/\/_____/   ;
;                                                 ;
;                DexOS System Calls               ;
;              By Craig Bamford (Dex)             ;
;=================================================;
0.  CallTableAddress
1.  RealModeInt10h
2.  ModuleFunction
3.  RealModeRegs
4.  PrintString_0
5.  Clstext
6.  TextColor
7.  GetTextColor
8.  GetTextPos
9.  PrintString_$
10. PrintChar
11. PrintCharCursor
12. SetCursorPos
13. WriteHex32
14. WriteHex16
15. WriteHex8
16. UpperCase
17. LowerCase
18. CompareString
19. GetParams
20. GetUserInput
21. GetCommandStored
22. WaitForKeyPress
23. KeyPressedNoWait
24. KeyPressedScanNW
25. GameKeyBoardOn
26. GameKeyBoardOff
27. KeyBoardLanguage
28. ExtendedMemory
29. ConvenMemorySize
30. TopOfMemory
31. GetBaseAddOn
32. DetectPciBus
33. PciFindDevice
34. PciRegWrite8
35. PciRegWrite16
36. PciRegWrite32
37. PciRegRead8
38. PciRegRead16
39. PciRegRead32
40. InterruptTimer
41. SetDelay
42. TimerNoWait
43. GetClockTicks
44. TimerSecondCount
45. CountTicks
46. LoadVesaInfo
47. SetVesaMode
48. ResetMouse
49. ShowMouse
50. HideMouse
51. GetMousePos
52. SetMouseMaxMinXY
53. SetMouseXY
54. SetMouseOff
55. RamSize
56. Function56
57. Function57
58. Function58
59. Function59
60. PlayAllTracks
61. PlayTrack
62. CheckCdBusy
63. CheckCdStateus
64. TrackInFo
65. RebootSystem
66. ExitSystem
67. SetIntVector
68. GetIntVector
69. GetDate
70. GetTime
71. FatTime
72. FatDate
73. GetDmaBufferAddress
74. FddReadB
75. FddWriteB
76. FS_ReadSector
77. FS_WriteSector
78. DirFileList
79. ReadFileFat
80. WriteFileFat
81. GetBootDrive
82. print_time
83. print_date
84. AnyFatUpdate
85. DeleteFile
86. ReMountFdd
87. ReNameFile
88. GetRmPalette
;=======================================================  ;
; 0.  CallTableAddress                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT  Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Notes: Call-table address,DO NOT call as function.      ;
;                                                         ;
;=======================================================  ;

;=======================================================  ;
; 1.  RealModeInt10h                                      ;
;=======================================================  ;
;                                                         ;
; IN:  AX =  ?          (see BIOS function)               ;
;      BX =  ?                                            ;
;      CX =  ?                                            ;
;      DX =  ?                                            ;
;      DI =  ?                                            ;
;      SI =  ?                                            ;
;                                                         ;
; OUT: AX =  ?                                            ;
;      BX =  ?                                            ;
;      CX =  ?                                            ;
;      DX =  ?                                            ;
;      DI =  ?                                            ;
;      SI =  ?                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Notes: Call realmode int 10h, fill in AX,BX,CX,DX       ;
;        DI, SI with function number etc, be carefull     ;
;        may not work will all functions.                 ;
;        Example if function needs realmode buffer.       ;
;                                                         ;
;=======================================================  ;

;=======================================================  ;
; 2.  ModuleFunction                                      ;
;=======================================================  ;
;                                                         ;
; IN: ESI = Address of module function ID string          ;
;                                                         ;
;                                                         ;
; OUT: (If carry NOT set)                                 ;
;      EAX = Address of module Call-table                 ;
;                                                         ;
;      (If carry is set) ERROR:                           ;
;      No Module with that ID, loaded.                    ;
;                                                         ;
;=======================================================  ;

;=======================================================  ;
; 3.  RealModeRegs                                        ;
;=======================================================  ;
;                                                         ;
; IN:   Nothing                                           ;
;                                                         ;
; OUT:  = AX,BX,CX,DX with result from RealModeInt10h     ;
;                                                         ;
;=======================================================  ;

;=======================================================  ;
; 4.  PrintString_0                                       ;
;=======================================================  ;
;                                                         ;
; IN:   ESI = Address zero termanated String              ;
;                                                         ;
; OUT:  Nothing                                           ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Also needs, 10, 13 for nextline.                  ;
;=======================================================  ;

;=======================================================  ;
; 5.  Clstext                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Clears text mode screen.                          ;
;=======================================================  ;

;=======================================================  ;
; 6.  TextColor                                           ;
;=======================================================  ;
;                                                         ;
; IN:  AL = Text color                                    ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets text mode, text color.                       ;
;=======================================================  ;

;=======================================================  ;
; 7.  GetTextColor                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: AL = Text color                                    ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the text color.                              ;
;=======================================================  ;

;=======================================================  ;
; 8.  GetTextPos                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: AL = X                                             ;
;      AH = Y                                             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Get text pos.                                     ;
;=======================================================  ;

;=======================================================  ;
; 9.  PrintString_$                                       ;
;=======================================================  ;
;                                                         ;
; IN:   ESI = Address '$' termanated String               ;
;                                                         ;
; OUT:  Nothing                                           ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Also needs, 10, 13 for nextline.                  ;
;=======================================================  ;

;=======================================================  ;
; 10. PrintChar                                           ;
;=======================================================  ;
;                                                         ;
; IN:  AL = Char                                          ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Prints the char                                   ;
;=======================================================  ;

;=======================================================  ;
; 11. PrintCharCursor                                     ;
;=======================================================  ;
;                                                         ;
; IN:  AL = Char                                          ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Prints char and moves cursor.                     ;
;=======================================================  ;

;=======================================================  ;
; 12. SetCursorPos                                        ;
;=======================================================  ;
;                                                         ;
; IN:  AL = X                                             ;
;      AH = Y                                             ;
;                                                         ;
; OUT: (If carry is set) ERROR:                           ;
;      X or Y is bigger than screen size                  ;
;                                                         ;
;      (If carry NOT set) OK:                             ;
;      AH = 0                                             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets Cursor Pos.                                  ;
;=======================================================  ;

;=======================================================  ;
; 13. WriteHex32                                          ;
;=======================================================  ;
;                                                         ;
; IN: EAX = Hex value to print                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 14. WriteHex16                                          ;
;=======================================================  ;
;                                                         ;
; IN:  AX = Hex value to print                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 15. WriteHex8                                           ;
;=======================================================  ;
;                                                         ;
; IN:  AL = Hex value to print                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 16. UpperCase                                           ;
;=======================================================  ;
;                                                         ;
; IN: EDI = String buffer (0 termanated)                  ;
;                                                         ;
; OUT: String pointed to by edi, now is UpperCase         ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Converts a 0 termanated string,to uppercase.      ;
;=======================================================  ;

;=======================================================  ;
; 17. LowerCase                                           ;
;=======================================================  ;
;                                                         ;
; IN: EDI = String buffer (0 termanated)                  ;
;                                                         ;
; OUT: String pointed to by edi, now is LowerCase         ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Converts a 0 termanated string,to LowerCase.      ;
;=======================================================  ;

;=======================================================  ;
; 18. CompareString                                       ;
;=======================================================  ;
;                                                         ;
; IN: EDI = String1 buffer (0 termanated)                 ;
;     ESI = String2 buffer (0 termanated)                 ;
;     ECX = String size                                   ;
;                                                         ;
; OUT: CF to 1, if strings are not the same               ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: You must remember to fill ecx with string lenght. ;
;=======================================================  ;

;=======================================================  ;
; 19. GetParams                                           ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: ESI = Command line buffer address                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the address of the command line buffer.      ;
;=======================================================  ;

;=======================================================  ;
; 20. GetUserInput                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EDI = Buffer address                               ;
;       CX = Input lenght                                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Gets user input, until enter pressed.            ;
;=======================================================  ;

;=======================================================  ;
; 21. GetCommandStored                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EDI = Buffer address                               ;
;       CX = Input lenght                                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Gets user input, until enter pressed.            ;
;        This ver work with right arrow key, to           ;
;        get last input.                                  ;
;=======================================================  ;

;=======================================================  ;
; 22. WaitForKeyPress                                     ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = ASCII code of keypressed                     ;
;       AH = Scancode of keypressed                       ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Wait for keypress                                 ;
;=======================================================  ;

;=======================================================  ;
; 23. KeyPressedNoWait                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = If keyperssed AL=1,if not keypressed AL=0.   ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Does not Wait for keypress you use it in a loop   ;
;       To test if pressed if not loop again.             ;
;=======================================================  ;

;=======================================================  ;
; 24. KeyPressedScanNW                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: If keyperssed                                      ;
;      AL = ASCII code                                    ;
;      AH = Scancode                                      ;
;                                                         ;
;      If noT keypressed                                  ;
;      AL = 0                                             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: No wait.                                          ;
;=======================================================  ;

;=======================================================  ;
; 25. GameKeyBoardOn                                      ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: ESI = points to KeyDown a 128 byte array           ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Puts the game keyboard on                        ;
;        To use, store esi, eg:                           ;
;        mov    [KeyDown],esi                             ;
;        to test if space bar pressed for example         ;
;        you would                                        ;
;                                                         ;
;        MOV     ESI,[KeyDown]                            ;
;        CMP     BYTE[ESI + Space],1                      ;
;        JNZ     SpaceBarNotPreesed                       ;
;                                                         ;
;        ;code here means its pressed                     ;
;                                                         ;
; NOTE:  In your code there would be something like       ;
;                                                         ;
; Space  =   0x39                                         ;
;                                                         ;
; This means multi keypresses at the same time, can be    ;
; traped :).                                              ;
;                                                         ;
; NOTE2: Normal keyboard will be disconected              ;
;        GameKeyBoardOff function is called.              ;
;=======================================================  ;

;=======================================================  ;
; 26. GameKeyBoardOff                                     ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Turns the Game keyboard off and normal one back   ;
;       on.                                               ;
;=======================================================  ;

;=======================================================  ;
; 27.  KeyBoardLanguage                                   ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = 'KEYB' if sucsessfull                        ;
;      EDI = Pointer to keyMap                            ;
;            KeyMap size = 1024 bytes                     ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Returns a pointer to keyMap                      ;
;        This means you can replace it with a differant   ;
;        languages                                        ;
;=======================================================  ;

;=======================================================  ;
; 28. ExtendedMemory                                      ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = Extended memory (in KBs)                     ;
;      EBX = Total ram (in MB)                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 29. ConvenMemorySize                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = conventional memory (in KBs)                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 30. TopOfMemory                                         ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = Top of useable memory, in bytes.             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Nothing                                          ;
;=======================================================  ;

;=======================================================  ;
; 31. GetBaseAddOn                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = Base add on.                                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:                                                   ;
;=======================================================  ;

;=======================================================  ;
; 32. DetectPciBus                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Set's CF to 1, if no pci bus                       ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Detect Pci Bus present.                           ;
;=======================================================  ;

;=======================================================  ;
; 33. PciFindDevice                                       ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = Device + vendor ID                           ;
;                                                         ;
; OUT: EAX = PCI address if device found                  ;
;      CF to 1,if no vender/device found.                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Scan through PCI space looking for a              ;
;       device+vendor ID                                  ;
;=======================================================  ;

;=======================================================  ;
; 34. PciRegWrite8                                        ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;       DL = data to write.                               ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 35. PciRegWrite16                                       ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;       DX = data to write.                               ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 36. PciRegWrite32                                       ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;      EDX = data to write.                               ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 37. PciRegRead8                                         ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;                                                         ;
; OUT:  DL = register data.                               ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 38. PciRegRead16                                        ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;                                                         ;
; OUT:  DX = register data.                               ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 39. PciRegRead32                                        ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = PCI Bus/Device/fn/register number            ;
;                                                         ;
; OUT: EDX = register data.                               ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 40. InterruptTimer                                      ;
;=======================================================  ;
;                                                         ;
; IN:   CX = Number of times a second                     ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Reprograms interrupt timer                        ;
;       at program end the timer is restored              ;
;       with CX = 0 .                                     ;
;=======================================================  ;

;=======================================================  ;
; 41. SetDelay                                            ;
;=======================================================  ;
;                                                         ;
; IN:   AX = Delay                                        ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets a delay, example 18.2 = 1 second.            ;
;=======================================================  ;

;=======================================================  ;
; 42. TimerNoWait                                         ;
;=======================================================  ;
;                                                         ;
; IN:   AX = Timer to delay (To start timer)              ;
;       AX = 0 after that                                 ;
;                                                         ;
; OUT:  AL returns 1 than timer not finished              ;
;       if AL returns 0 them timer finished.              ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets a delay, but does not wait.                  ;
;=======================================================  ;

;=======================================================  ;
; 43. GetClockTicks                                       ;
;=======================================================  ;
;                                                         ;
; IN:  ECX = 1 to start timer                             ;
;      ECX = *Any number other than 1, return's-          ;
;            clock ticks                                  ;
;                                                         ;
; OUT: See * above for return                             ;
;      EAX = Clockticks.                                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Nothing                                          ;
;=======================================================  ;

;=======================================================  ;
; 44. TimerSecondCount                                    ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = The number of ticks, since OS started.       ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: 18.2 ticks a second are added.                    ;
;=======================================================  ;

;=======================================================  ;
; 45. CountTicks                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: CF = 1 on clock tick                               ;
;      CF = 0 the rest of the time.                       ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 46. LoadVesaInfo                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  ESI = address of vesainfo                         ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: loads the address of vesainfo in esi              ;
;       use this to fill a vesa info structure            ;
;       (in Dex.inc).                                     ;
;=======================================================  ;

;=======================================================  ;
; 47. SetVesaMode                                         ;
;=======================================================  ;
;                                                         ;
; IN:  BX = MODE NUMBER                                   ;
;                                                         ;
; OUT: CF to 1 on error                                   ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets vesa mode,You need to call the               ;
;       above function after this one.                    ;
;=======================================================  ;

;=======================================================  ;
; 48. ResetMouse                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: AX = 0x0000 if no mouse found,                     ;
;      AX = 0xffff if found,                              ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: enables mouse (next function needed to            ;
;       show mouse.)                                      ;
;=======================================================  ;

;=======================================================  ;
; 49. ShowMouse                                           ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Shows mouse pointer (text mode).                  ;
;=======================================================  ;

;=======================================================  ;
; 50. HideMouse                                           ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Hides mouse text mode.                            ;
;=======================================================  ;

;=======================================================  ;
; 51. GetMousePos                                         ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  BL = button pressed,                              ;
;            00000001 = rightbutton                       ;
;            00000010 = centerbutton                      ;
;            00000100 = leftbutton                        ;
;       CX = X                                            ;
;       DX = Y                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the XY and button press.                     ;
;=======================================================  ;

;=======================================================  ;
; 52. SetMouseMaxMinXY                                    ;
;=======================================================  ;
;                                                         ;
; IN:  EAX =  bits 32to17 = minX                          ;
;             bits 16to1 = maxX                           ;
;      EDX =  bits 32to17 = minY                          ;
;             bits 16to1 = maxY.                          ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Set mouses min/max XY                             ;
;=======================================================  ;

;=======================================================  ;
; 53. SetMouseXY                                          ;
;=======================================================  ;
;                                                         ;
; IN:   AX = X                                            ;
;       DX = Y                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Sets mouse xy.                                    ;
;=======================================================  ;

;=======================================================  ;
; 54. SetMouseOff                                         ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Turns the mouse show off                          ;
;=======================================================  ;

;=======================================================  ;
; 55. RamSize                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  Eax = ram size                                    ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Nothing                                           ;
;=======================================================  ;

;=======================================================  ;
; 56. Function56                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  not used yet                                     ;
;=======================================================  ;

;=======================================================  ;
; 57. Function57                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  not used yet                                     ;
;=======================================================  ;

;=======================================================  ;
; 58. Function58                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  not used yet                                     ;
;=======================================================  ;

;=======================================================  ;
; 59. Function59                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  not used yet                                     ;
;=======================================================  ;

;=======================================================  ;
; 60. PlayAllTracks                                       ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = number of tracks                             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Play all tracks on CD                             ;
;=======================================================  ;

;=======================================================  ;
; 61. PlayTrack                                           ;
;=======================================================  ;
;                                                         ;
; IN:   AL = Track to play                                ;
;                                                         ;
; OUT:  AL = Number of tracks on cd.                      ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Play one track.                                   ;
;=======================================================  ;

;=======================================================  ;
; 62. CheckCdBusy                                         ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  CF to 1 on error (busy)                           ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Checks if CD is busy.                             ;
;=======================================================  ;

;=======================================================  ;
; 63. CheckCdStateus                                      ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = Stateus code                                 ;
;            CF to 1 on error.                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Checks CD stateus.                                ;
;=======================================================  ;

;=======================================================  ;
; 64. TrackInFo                                           ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = number of tracks on audio CD                 ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Returns number of tracks on audio CD              ;
;=======================================================  ;

;=======================================================  ;
; 65. RebootSystem                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Reboots the machine.                             ;
;=======================================================  ;

;=======================================================  ;
; 66. ExitSystem                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Exits to DOS, if in DOS, Reboots otherwise.       ;
;=======================================================  ;

;=======================================================  ;
; 67. SetIntVector                                        ;
;=======================================================  ;
;                                                         ;
; IN:   AL = interrupt number                             ;
;      EDX = interrupt handler address                    ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Hooks in the interrupt vector.                    ;
;=======================================================  ;

;=======================================================  ;
; 68. GetIntVector                                        ;
;=======================================================  ;
;                                                         ;
; IN:   AL = interrupt number                             ;
;                                                         ;
; OUT: EDX = offset                                       ;
;       CX = selector                                     ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the the interrupt vector address, only       ;
;       offset need updating, on returning old address    ;
;       or setting new.                                   ;
;=======================================================  ;

;=======================================================  ;
; 69. GetDate                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  EAX = century, year, month, day,                  ;
;             each a byte in bcd format.                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the currant date.                            ;
;=======================================================  ;

;=======================================================  ;
; 70. GetTime                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  EAX = hour, minute, second                        ;
;             each a byte in bcd format.                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the currant time .                           ;
;=======================================================  ;

;=======================================================  ;
; 71. FatTime                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AX = TIME                                         ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Returns a time stamp for including in FAT.        ;
;=======================================================  ;

;=======================================================  ;
; 72. FatDate                                             ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AX = DATE                                         ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Returns a date stamp for including in FAT.        ;
;=======================================================  ;

;=======================================================  ;
; 73. GetDmaBufferAddress                                 ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: ESI = READ                                         ;
;      EDI = WRITE                                        ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Return's the Dma floppy 512byte buffer address.   ;
;=======================================================  ;

;=======================================================  ;
; 74. FddReadB                                            ;
;=======================================================  ;
;                                                         ;
; IN:   CH = Track/cylinder                               ;
;       CL = Sector                                       ;
;       DH = Head                                         ;
;       DL = Drive                                        ;
;            (A:  use 00 , C: use 80h )                   ;
;                                                         ;
; OUT:  AH = Status                                       ;
;       AL = Sector number read                           ;
;       CF = 1 error.                                     ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Floppy/Hdd read sector, using bios driver.        ;
;=======================================================  ;

;=======================================================  ;
; 75. FddWriteB                                           ;
;=======================================================  ;
;                                                         ;
; IN:   CH = Track/cylinder                               ;
;       CL = Sector                                       ;
;       DH = Head                                         ;
;       DL = Drive                                        ;
;            (A: use 00 , C: use 80h)                     ;
;                                                         ;
; OUT:  AH = Status                                       ;
;       AL = Sector number written                        ;
;       CF = 1 error.                                     ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Floppy/Hdd write sector, using bios driver.       ;
;=======================================================  ;

;=======================================================  ;
; 76. FS_ReadSector                                       ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = Unit (drive number)                          ;
;            1  = primary device (0x1f0), master(0x00)    ;
;            2  = primary device (0x1f0), slave(0x10)     ;
;            3  = secondary device (0x170), master(0x00)  ;
;            4  = secondary device (0x170), slave(0x10)   ;
;      EDI = Buffer to write the data to                  ;
;            (must be 512bytes)                           ;
;      EDX = Sector number to read from (LBA format)      ;
;      ECX = Count  Nunmber of sectors (just 1 for now)   ;
;                                                         ;
; OUT:  AH  = 0  for success                              ;
;       AH  = Nonzero for failure                         ;
;             1  = Not implemented yet                    ;
;             2  = Unit to high                           ;
;             3  = TimeOut                                ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Reads a sector from hdd, using PM driver.         ;
;=======================================================  ;

;=======================================================  ;
; 77. FS_WriteSector                                      ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = Unit (drive number)                          ;
;            1  = primary device (0x1f0), master(0x00)    ;
;            2  = primary device (0x1f0), slave(0x10)     ;
;            3  = secondary device (0x170), master(0x00)  ;
;            4  = secondary device (0x170), slave(0x10)   ;
;      EDI = Buffer to read the data from                 ;
;            (must be 512bytes)                           ;
;      EDX = Sector number to write to (LBA format)       ;
;      ECX = Count  Nunmber of sectors (just 1 for now)   ;
;                                                         ;
; OUT:  AH  = 0  for success                              ;
;       AH  = Nonzero for failure                         ;
;             1  = Not implemented yet                    ;
;             2  = Unit to high                           ;
;             3  = TimeOut                                ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Writes a sector to hdd, using PM driver.          ;
;=======================================================  ;

;=======================================================  ;
; 78. DirFileList                                (****)   ;
;=======================================================  ;
;                                                         ;
; IN:  EDI = Buffer address                               ;
;      ECX = Max number                                   ;
;       AX = Ext eg 'GE' for gex files                    ;
;            or AX = 0 for all files                      ;
;                                                         ;
; OUT: ESI = BUFFER Address                               ;
;      ECX = Number of file listed.                       ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Fills a buffer with file names from root dir.     ;
;=======================================================  ;

;=======================================================  ;
; 79. ReadFileFat                                (****)   ;
;=======================================================  ;
;                                                         ;
; IN:  EDI = File name                                    ;
;      EDX = Address to load file too.                    ;
;                                                         ;
; OUT: EBX = Number of sectors read.                      ;
;      ECX = Nunmber of bytes                             ;
;       If   CF clear                                     ;
;      or                                                 ;
;       CF = 1 If error.                                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Loads a file from default drive (eg: A: C: ..)    ;
;=======================================================  ;

;=======================================================  ;
; 80. WriteFileFat                               (****)   ;
;=======================================================  ;
;                                                         ;
; IN:  EAX = File size in bytes                           ;
;      ESI = Name of file to write                        ;
;      EDI = Data to write                                ;
;                                                         ;
; OUT: Carry set on error                                 ;
;      no errors                                          ;
;      EBX = Number of sector written                     ;
;      ECX = Nunmber of bytes                             ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Writes a file to default drive (fat12/16 only).   ;
;=======================================================  ;

;=======================================================  ;
; 81. GetBootDrive                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT:  AL = C or A drive letter etc                      ;
;       BL = (0=A, 1=B, 2=C, etc).                        ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Gets the boot drive                              ;
;=======================================================  ;

;=======================================================  ;
; 82. print_time                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note:  Prints time in text mode                         ;
;=======================================================  ;

;=======================================================  ;
; 83. print_date                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Prints date in text mode                          ;
;=======================================================  ;

;=======================================================  ;
; 84. AnyFatUpdate                                        ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: EAX = 1 if no update needed                        ;
;      EAX = 0 if needed                                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Call this to check if there has been              ;
;       any thing written to FAT.                         ;
;=======================================================  ;

;=======================================================  ;
; 85. DeleteFile                                 (****)   ;
;=======================================================  ;
;                                                         ;
; IN:  ESI = Name of file to delete                       ;
;       AL = 1 if not to write to disk or                 ;
;       AL = 0 to update fat/root dir to disk             ;
;                                                         ;
; OUT: Carry set on error                                 ;
;       AH = Error code.                                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Deletes a file from the default drive, root dir   ;
;       only.                                             ;
;=======================================================  ;

;=======================================================  ;
; 86. ReMountFdd                                          ;
;=======================================================  ;
;                                                         ;
; IN:  Nothing                                            ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Remount the root dir, eg: if you                  ;
;       change floppy or USB.                             ;
;=======================================================  ;

;=======================================================  ;
; 87. ReNameFile                                 (****)   ;
;=======================================================  ;
;                                                         ;
; IN:  ESI = Old file name(zero ending string)            ;
;      EDI = New file name(zero ending string)            ;
;                                                         ;
; OUT: Carry set on error                                 ;
;       AX = Error code.                                  ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Rename's a file on the default drive.             ;
;       (ROOT DIR ONLY)                                   L
;=======================================================  ;

;=======================================================  ;
;  88. GetRmPalette                                       ;
;=======================================================  ;
;                                                         ;
; IN:  EDX = pointer to 20 byte Palette                   ;
;                                                         ;
; OUT: Nothing                                            ;
;                                                         ;
;-------------------------------------------------------  ;
; Note: Gets the standared realmode Palette.              ;
;=======================================================  ;

 (****) = Better to use FAT module if availabe